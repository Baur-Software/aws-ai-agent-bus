name: Dashboard UI CI

on:
  push:
    branches: [ main, develop, feature-flags-tests ]
    paths:
      - 'dashboard-ui/**'
      - '.github/workflows/dashboard-ui-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'dashboard-ui/**'
      - '.github/workflows/dashboard-ui-ci.yml'

defaults:
  run:
    working-directory: ./dashboard-ui

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['22']  # LTS versions

    steps:
    - uses: actions/checkout@v4
    - name: Configure git for containers
      run: |
        git config --global --add safe.directory /github/workspace
        git config --global --add safe.directory '*'
        git config --global init.defaultBranch main
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: dashboard-ui/package-lock.json

    - name: Install dependencies
      run: npm ci --include=dev

    - name: TypeScript type checking
      run: npm run typecheck

    - name: Run tests
      run: npm run test:ci
      env:
        NODE_ENV: test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          dashboard-ui/test-results.xml
          dashboard-ui/test-results.json
          dashboard-ui/coverage/

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: dashboard-ui/package-lock.json

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Sanity check dev deps
      run: |
        npm ls vite vite-plugin-solid || true

    - name: Build for production
      run: npm run build

    - name: Test build artifacts
      run: |
        echo "Verifying build artifacts..."
        if [ -d "dist" ]; then
          echo "✅ Build directory created"
          ls -la dist/

          # Check for essential files
          if [ -f "dist/index.html" ]; then
            echo "✅ index.html found"
          else
            echo "❌ index.html missing"
            exit 1
          fi

          # Check build size (warn if >5MB)
          SIZE=$(du -sm dist/ | cut -f1)
          echo "Build size: ${SIZE}MB"
          if [ $SIZE -gt 5 ]; then
            echo "⚠️ Warning: Build size is large (${SIZE}MB)"
          fi
        else
          echo "❌ Build directory not found"
          exit 1
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dashboard-ui-dist
        path: dashboard-ui/dist/

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: dashboard-ui/package-lock.json

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Security audit
      run: npm audit --audit-level=high

    - name: Check for sensitive data
      run: |
        echo "Checking for sensitive data..."

        # Check for hardcoded secrets
        if grep -r "baursoftware" src/ 2>/dev/null || grep -r "545027c4\|09c21e37" src/ 2>/dev/null; then
          echo "❌ Sensitive data found in source code"
          exit 1
        fi

        # Check for API keys
        if grep -r -E "api_key.*=.*[A-Za-z0-9]{20,}" src/ 2>/dev/null; then
          echo "❌ Potential API key found"
          exit 1
        fi

        # Check for hardcoded URLs in production builds
        if grep -r -E "localhost:[0-9]+" src/ --exclude="*.test.*" --exclude="*.spec.*" 2>/dev/null; then
          echo "❌ Hardcoded localhost URLs found"
          exit 1
        fi

        echo "✅ No sensitive data found"

  integration:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: dashboard-ui/package-lock.json

    - name: Install dashboard-ui dependencies
      run: npm ci --include=dev

    - name: Install dashboard-server dependencies
      run: |
        cd ../dashboard-server
        npm ci

    - name: Start dashboard-server
      run: |
        cd ../dashboard-server
        npm start &
        SERVER_PID=$!
        echo $SERVER_PID > server.pid
        sleep 5
      env:
        NODE_ENV: test
        ENABLE_DEV_AUTH: true

    - name: Build and preview dashboard-ui
      run: |
        npm run build
        npm run preview &
        PREVIEW_PID=$!
        echo $PREVIEW_PID > preview.pid
        sleep 5

    - name: Test integration
      run: |
        echo "Testing dashboard integration..."

        # Test dashboard-server health
        if curl -f http://localhost:3001/health; then
          echo "✅ Dashboard server health check passed"
        else
          echo "❌ Dashboard server health check failed"
          exit 1
        fi

        # Test dashboard-ui serving
        if curl -f http://localhost:4173/; then
          echo "✅ Dashboard UI serving check passed"
        else
          echo "❌ Dashboard UI serving check failed"
          exit 1
        fi

    - name: Cleanup
      if: always()
      run: |
        # Kill preview server
        if [ -f preview.pid ]; then
          kill $(cat preview.pid) || true
        fi

        # Kill dashboard server
        if [ -f ../dashboard-server/server.pid ]; then
          kill $(cat ../dashboard-server/server.pid) || true
        fi